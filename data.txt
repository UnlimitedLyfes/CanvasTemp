16786419
If a subclass reference is assigned to a superclass variable, the variable must be cast back to the subclass before any subclass methods can be called with it.
true

16758889
What does the name Polymorphism translate to?
Many forms

16836008
If same message is passed to objects of several different classes and all of those can respond in a different way, what is this feature called?
Polymorphism

16784289
Fill in the blanks so that the following draws a Frame containing "Hello".  import java.awt.*;     class helloFrame ___________ Frame  {   public void ___________( Graphics g )   {   g.___________("Hello", 10, 50 );    }  }    public class Tester  {   public static void main ( String[] args )   {   helloFrame frm = new helloFrame();    frm.setSize( 150, 100 );    frm.setVisible( true );   }  }  
extends, paint, drawString

16777500
The encapsulation is achieved by combining which ones into a class?
Methods and Attribute

16836019
Which of the following classes fail to compile?    class X { abstract void method(); }  abstract class Y extends X { }  class Z extends Y { void method() { } }  
X

16836018
Can an abstract class define both abstract methods and non-abstract methods?
Yes--the child classes inherit both.

16786363
If two classes combine some private data members and provides public member functions to access and manipulate those data members. Where is abstraction used?
Using public member functions to access and manipulate the data members

16784292
Which of the following classes fail to compile?  abstract class X { abstract void method(); }  abstract class Y extends X { }  class Z extends Y { void Method() { System.out.println("Class Z"); } }
Z

16777507
What will be the output of the following program?    public class BlockFinal  {   public static void main(String[] a)   {   try   {   int i = 10 / 0;   }   catch (Exception ex)   {   System.out.println("1st catch Block");   }   finally   {   System.out.println("1st finally block");   }   try   {   int i = 10 / 10;   }   catch (Exception ex)   {   System.out.println("2nd catch Block");   }   finally   {   System.out.println("2nd finally block");   }   }  }  
1st catch Block 1st finally block 2nd finally block

16788196
Which of the following ways can be used to handle exceptions? X: By wrapping the desired code in a try block followed by a catch block to catch the exceptions. Y: List the desired exceptions in the throws clause of the method and let the caller of the method handle those exceptions.
Both X and Y

16784296
What will happen when you compile and run the following code?    public class Test{       String className;      public static void main(String[] args){         try{      Test t = new Test();   if(t.className.equals("Test"))   System.out.print("Test ");   else   System.out.print("Other ");      }catch(Exception e){   System.out.print("Exception ");   }catch(NullPointerException ne){   System.out.print("Null ");   }      }     }  
Compilation error

16784294
What method of an Exception object returns a message string?
getMessage()

16826891
What will happen when you compile and run the following code with assertion enabled?    public class Test{      public static void main(String[] args){      int[] marks = {40, 38, 52};    boolean[] pass = {false, false, false};      for(int i = 0 ; i &lt; marks.length; i++){      try{      assert marks[i] &gt;= 40 : pass[i] = true;      }catch(AssertionError ae){   pass[i] = false;   }   }      for(boolean b : pass)   System.out.print(b + ",");         }     }
The code will compile and print false,false,false,

16786565
What will happen when you compile and run the following code with assertion enabled?    public class Test{     private static int ALLOW_OBJECTS = 1;     Test(){   assert ALLOW_OBJECTS;   ALLOW_OBJECTS = 0;   }     public static void main(String[] args){   Test t = new Test();   t.getState();   }     private void getState() {   System.out.println(ALLOW_OBJECTS);   }    }
The code will not compile

16777510
public class Test2   {   public static int x;   public static int foo(int y)    {   return y * 2;   }   public static void main(String [] args)    {   int z = 5;   assert z &gt; 0; /* Line 11 */   assert z &gt; 2: foo(z); /* Line 12 */   if ( z &lt; 7 )   assert z &gt; 4; /* Line 14 */     switch (z)    {   case 4: System.out.println("4 ");   case 5: System.out.println("5 ");   default: assert z &lt; 10;   }     if ( z &lt; 10 )   assert z &gt; 4: z++; /* Line 22 */   System.out.println(z);   }  }  which line is an example of an inappropriate use of assertions?
Line 22

16786369
Which of the following statements is true?
It is sometimes good practice to throw an AssertionError explicitly.

16786368
Running a java program with -ea switch will enable assertion in system classes.
False

